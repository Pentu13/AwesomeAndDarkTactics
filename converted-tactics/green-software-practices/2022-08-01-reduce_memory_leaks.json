{
  "layout": "tactic",
  "title": "Reduce memory leaks",
  "tags": [
    "energy-footprint"
  ],
  "t-sort": "Awesome Tactic",
  "t-type": "Software Practice",
  "categories": [
    "green-software-practice"
  ],
  "t-description": "With memory leaks the application can stall or crash. This unpredictable behavior can alter the energy consumption and, more generally, they must always be avoided.",
  "t-participant": "Software application developers",
  "t-artifact": "C application in which we induce a memory leak (like malloc() )",
  "t-context": "Green Lab",
  "t-feature": "<Unavailable>",
  "t-intent": "Reduce memory leaks",
  "t-targetQA": "Energy-efficiency",
  "t-relatedQA": "<Unavailable>",
  "t-measuredimpact": "<Unavailable>",
  "t-source": "Procaccianti, G., Fern√°ndez, H., & Lago, P. (2019). Green Software in Practice: Empirical Validation and Assessment of Best Practices for Writing Energy-Efficient Software. Vrije Universiteit Amsterdam, October 2019.",
  "t-source-doi": "NA",
  "t-intentmeasure": "<Unavailable>",
  "t-countermeasure": "<Unavailable>",
  "t-diagram": "<Unavailable>"
}
