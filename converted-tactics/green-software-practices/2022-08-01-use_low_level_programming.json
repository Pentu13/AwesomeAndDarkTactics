{
  "layout": "tactic",
  "title": "Use low-level programming",
  "tags": [
    "energy-footprint"
  ],
  "t-sort": "Awesome Tactic",
  "t-type": "Software Practice",
  "categories": "green-software-practice",
  "t-description": "With low-level programming languages, the developer has more details of the system in which they are developing, than using high-level programming languages. When possible, it is advised to develop the more computationally intensive parts of the application in low-level programming languages to increase performances and energy efficiency.",
  "t-participant": "Software application developers",
  "t-artifact": "C/C++ versus Java",
  "t-context": "Green Lab",
  "t-feature": "",
  "t-intent": "Use low-level programming",
  "t-targetQA": "Energy-efficiency",
  "t-relatedQA": "",
  "t-measuredimpact": "",
  "t-source": "Procaccianti, G., Fern√°ndez, H., & Lago, P. (2019). Green Software in Practice: Empirical Validation and Assessment of Best Practices for Writing Energy-Efficient Software. Vrije Universiteit Amsterdam, October 2019.",
  "t-source-doi": "NA",
  "t-intentmeasure": "",
  "t-countermeasure": "",
  "t-diagram": ""
}
