name: Awesome and Dark Tactics Unified Workflow

on:
  push:
    paths:
      - 'docs/_posts/**'
      - 'docs/_new_posts/**'
      - 'validator.js'
      - 'tactic.field.json'
      - '.github/workflows/awesome_and_dark_tactics.yml'

permissions:
  contents: write
  issues: write
  actions: write

jobs:
  process-tactics:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout latest main
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Install dependencies
        run: npm install
      
      - name: Set git config
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
      
      - name: Validate all tactics
        run: |
          echo "=== VALIDATING ALL TACTICS ==="
          node validator.js
          echo "Validation completed successfully"
      
      - name: Check for new posts
        id: new_posts_check
        uses: tj-actions/changed-files@v44
        with:
          files: |
            docs/_new_posts/**
      
      - name: Generate new tags if needed
        if: steps.new_posts_check.outputs.any_changed == 'true'
        run: |
          echo "=== GENERATING NEW TAGS ==="
          node new_tag_generator.js
          echo "Tag generation completed"
      
      - name: Move new tactics to category folders
        if: steps.new_posts_check.outputs.any_changed == 'true'
        run: |
          echo "=== MOVING NEW TACTICS ==="
          echo "Listing files in docs/_new_posts before move:"
          ls -la docs/_new_posts/ || echo "No files found in _new_posts"
          
          moved_any=false
          shopt -s nullglob
          
          for file in docs/_new_posts/*.md docs/_new_posts/*.markdown; do
            [ -e "$file" ] || continue
            echo "Processing $file..."
            
            # Extract category from front matter
            category=$(awk '
              /^categories:/ {in_categories=1; next}
              in_categories && /^ *- / {
                sub(/^ *- /, "", $0); print $0; exit
              }
              in_categories && NF && !/^ / {in_categories=0}
            ' "$file" | xargs)
            
            if [ -z "$category" ]; then
              echo "WARNING: No category found in $file, skipping and NOT deleting."
              continue
            fi
            
            echo "Found category: $category"
            mkdir -p "docs/_posts/$category"
            mv "$file" "docs/_posts/$category/"
            echo "✓ Moved $file to docs/_posts/$category/"
            moved_any=true
          done
          
          echo "Listing files in docs/_new_posts after move:"
          ls -la docs/_new_posts/ || echo "No files left in _new_posts"
          
          if $moved_any; then
            echo "✓ Successfully moved tactics to category folders"
          else
            echo "No tactics were moved"
          fi
      
      - name: Convert all markdown to JSON
        run: |
          echo "=== CONVERTING MARKDOWN TO JSON ==="
          node convert.js
          echo "Conversion completed successfully"
      
      - name: Stage all changes
        run: |
          echo "=== STAGING CHANGES ==="
          git add .
          echo "Staged all changes"
      
      - name: Check if there are changes to commit
        id: check_changes
        run: |
          if git diff --staged --quiet; then
            echo "has_changes=false" >> $GITHUB_OUTPUT
            echo "No changes to commit"
          else
            echo "has_changes=true" >> $GITHUB_OUTPUT
            echo "Changes detected, will commit and push"
          fi
      
      - name: Commit and push changes
        if: steps.check_changes.outputs.has_changes == 'true'
        run: |
          echo "=== COMMITTING AND PUSHING CHANGES ==="
          git commit -m "Auto-process tactics: validate, move, convert, and update JSON"
          git push
          echo "✓ Successfully committed and pushed all changes"
      
      - name: No changes notification
        if: steps.check_changes.outputs.has_changes == 'false'
        run: |
          echo "=== NO CHANGES TO COMMIT ==="
          echo "All tactics are up to date, no changes needed"

  notify_on_error:
    needs: [process-tactics]
    if: failure()
    uses: ./.github/workflows/error-notification.yml
    with:
      workflow_name: ${{ github.workflow }}
      error_messages: "Tactic processing failed. See the logs for additional information." 